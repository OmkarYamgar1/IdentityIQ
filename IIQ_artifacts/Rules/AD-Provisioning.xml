<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE Rule PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<Rule created="1751882472954" id="c0a8006797e415e38197e4551dfa0061" language="beanshell" modified="1758728689266" name="AD-Provisioning">
  <Source>

  import java.text.SimpleDateFormat;
  import java.time.LocalDateTime;
  import java.time.format.DateTimeFormatter;
  import java.time.format.DateTimeParseException;
  import java.time.temporal.ChronoUnit;
  import java.util.List;
  import java.util.ArrayList;
  import java.util.Calendar;
  import java.util.Date;
  import java.util.HashMap;
  import java.util.Locale;
  import sailpoint.api.SailPointContext;
  import sailpoint.api.Terminator;
  import sailpoint.object.TaskDefinition;
  import sailpoint.object.TaskResult;
  import sailpoint.object.Filter;
  import sailpoint.object.QueryOptions;
  import sailpoint.tools.GeneralException;
  import sailpoint.object.Identity;
  import org.apache.commons.logging.Log;
  import org.apache.commons.logging.LogFactory;
  import java.util.List;
  import org.apache.commons.logging.Log;
  import org.apache.commons.logging.LogFactory;
  import sailpoint.api.IdentityService;
  import sailpoint.object.Identity;
  import sailpoint.object.Link;
  import sailpoint.object.ProvisioningPlan;
  import sailpoint.object.ProvisioningProject;
  import sailpoint.object.ProvisioningPlan.AccountRequest;
  import sailpoint.api.SailPointContext;
  import sailpoint.api.Provisioner;
  import sailpoint.object.Application;
  import sailpoint.object.EmailOptions;
  import sailpoint.object.EmailTemplate;
  import sailpoint.tools.GeneralException;
  import sailpoint.tools.Util;
  import sailpoint.object.ProvisioningPlan.AttributeRequest;
  import sailpoint.object.*;
  import sailpoint.api.*;
  import java.util.*;
  /*
  Identity identity=context.getObjectByName(Identity.class, "Steven.Markle");
  String nativeIdentity="Steven.Markle";
  ProvisioningPlan plan= new ProvisioningPlan();
  ArrayList Accountreq= new ArrayList();
  AccountRequest adrequest= new AccountRequest();
  adrequest.setApplication("Active Directory");
  adrequest.setOperation(ProvisioningPlan.AccountRequest.Operation.Modify);
  adrequest.setNativeIdentity("Steven.Markle");
  */
  //  adrequest.setNativeIdentity("cn="+identity.getFirstname()+",OU=MyCountry,DC=omkar,DC=com");
  /* adrequest.setNativeIdentity("cn="+identity.getFirstname()+"."+identity.getLastname()+",OU=MyCountry,DC=omkar,DC=com");
  AttributeRequest objtype=new AttributeRequest("objectType", ProvisioningPlan.Operation.Set, "User");
  AttributeRequest GivenName=new AttributeRequest("givenName", ProvisioningPlan.Operation.Set, identity.getFirstname());
  AttributeRequest Lastname= new AttributeRequest("sn", ProvisioningPlan.Operation.Set, identity.getLastname());
  AttributeRequest Samaccountname=new AttributeRequest("saMAccountName", ProvisioningPlan.Operation.Set, identity.getFirstname());
  AttributeRequest Password= new AttributeRequest("password", ProvisioningPlan.Operation.Set, "Omkar123");
  AttributeRequest email= new AttributeRequest("mail", ProvisioningPlan.Operation.Set, identity.getEmail());
  AttributeRequest UPN=new AttributeRequest("userPrincipalName", ProvisioningPlan.Operation.Set, identity.getFirstname()+ "@omkar.com");

  adrequest.add(objtype);
  adrequest.add(GivenName);
  adrequest.add(Password);
  adrequest.add(Lastname);
  adrequest.add(email);
  adrequest.add(UPN);
*/
  /*
  AttributeRequest email= new AttributeRequest("memberOf", ProvisioningPlan.Operation.Remove, null);
  adrequest.add(email);

 */ 
  ProvisioningPlan plan= new ProvisioningPlan();
  ArrayList Accountreq= new ArrayList();
  Identity identity=context.getObjectByName(Identity.class, "Steven.Markle");
  Application appObject = context.getObjectByName(Application.class, "Active Directory");
  IdentityService ids = new IdentityService(context);
  List links = ids.getLinks(identity, appObject);
  for(Link link : links){
    List entAttributes = appObject.getEntitlementAttributeNames();
    if (entAttributes != null &amp;&amp; !entAttributes.isEmpty()) {
      AccountRequest entitlementRequest = new AccountRequest();
      entitlementRequest.setApplication("Active Directory");
      entitlementRequest.setNativeIdentity("CN=Steven.Markle,OU=MyCountry,DC=omkar,DC=com");
      entitlementRequest.setOperation(ProvisioningPlan.AccountRequest.Operation.Modify);
      for (String entAttribute : entAttributes) {
        if (link.getAttribute(entAttribute) != null) {
          AttributeRequest ar = new AttributeRequest(entAttribute, ProvisioningPlan.Operation.Remove, link.getAttribute(entAttribute));
          ar.put("preferRemoveOverRetain", "true");
          ar.put("assignment", "true");

          entitlementRequest.add(ar);
        }
      }Accountreq.add(entitlementRequest);
    }
  }


  plan.setAccountRequests(Accountreq);
  plan.setIdentity(identity);

  Provisioner provisioner = new Provisioner(context);
  //log.error(": Plan contexted");
  //ProvisioningProject project = provisioner.compile(plan);
  //log.error(": Plan compiled");

  provisioner.execute(plan);
  ProvisioningProject project = provisioner.getProject();
  return project.toXml();
  return plan.toXml();

  </Source>
</Rule>
